#! /usr/bin/env python
import os, sys, re

def configure(conf):
    pass

def build(bld):
    bld.add_subdirs('openal')

    source =  'sound.cpp stb_vorbis/stb_vorbis.c'.split()
    include = ''
    if re.match('arm.*?android', bld.env['PLATFORM']):
        include = 'openal/include'

    if re.match('arm.*?darwin', bld.env['PLATFORM']):
        source.append('sound_ios.cpp')
    else:
        source.append('sound_generic.cpp')

    alut = bld.new_task_gen(features = 'cc cstaticlib',
                            includes = '. alut %s' % include ,
                            target = 'alut')

    alut.find_sources_in_dirs('alut')

    if sys.platform == 'win32':
        #NOTE: _XBOX to get static lib and avoid dllimport/dllexport stuff
        alut.defines = '_XBOX HAVE_STDINT_H HAVE__STAT ALUT_BUILD_LIBRARY HAVE_SLEEP HAVE_WINDOWS_H'
    else:
        alut.defines = 'HAVE_STDINT_H HAVE_STAT HAVE_UNISTD_H HAVE_USLEEP'

    sound = bld.new_task_gen(features = 'cc cxx cstaticlib ddf',
                             includes = '. alut vorbis_tremor %s' % include,
                             target = 'sound',
                             source = source)

    sound_null = bld.new_task_gen(features = 'cc cxx cstaticlib ddf',
                             includes = '.',
                             target = 'sound_null',
                             source = 'sound_null.cpp sound_generic.cpp stb_vorbis/stb_vorbis.c')

    if sys.platform == 'win32':
        #NOTE: _XBOX to get static lib and avoid dllimport/dllexport stuff
        sound.defines = '_XBOX'
        sound_null.defines = '_XBOX'

    bld.add_subdirs('test')
    bld.install_files('${PREFIX}/include/sound', 'sound.h')
